-- SQL Joins: Moisès Gómez

-- 1. List the number of films per category

select category.name, count(film_category.film_id) as nfilms
from film_category, category
where film_category.category_id = category.category_id group by category.category_id;

-- With explicit joins

select category.name, count(film_category.film_id) as nfilms
from film_category join category
on film_category.category_id = category.category_id group by category.category_id;


-- 2. store id, city and country for store

-- With no explicit joins

select store.store_id, city, country
from store, address, city, country
where store.address_id = address.address_id and
      address.city_id = city.city_id and
      city.country_id = country.country_id;

-- With explicit joins

select store.store_id, city, country
from store join address
on store.address_id = address.address_id
join city
on address.city_id = city.city_id
join country
on city.country_id = country.country_id;

-- 3. Total revenue generated by each store in dollars

select store.store_id, sum(amount)
from store, staff, payment
where store.store_id = staff.store_id and staff.staff_id = payment.staff_id
group by store.store_id;

-- with explicit joins

select store.store_id, sum(amount)
from store join staff on store.store_id = staff.store_id
           join payment on staff.staff_id = payment.staff_id
group by store.store_id;


-- 4. average running time of fimls for each category

select category.name, avg(film.length)
from film, film_category, category
where film.film_id = film_category.film_id and
      film_category.category_id = category.category_id
group by category.category_id;

-- with explicit joins
select category.name, avg(film.length)
from category join film_category on category.category_id = film_category.category_id
              join film on film_category.film_id = film.film_id
group by category.category_id;

-- 5. film categories with longest average length

select category.name, avg(film.length)
from category join film_category on category.category_id = film_category.category_id
              join film on film_category.film_id = film.film_id
group by category.category_id
limit 1;


-- 6. Top ten most frequently rented movies in descending order

select film.title, count(rental_id) as num_rentals
from rental join inventory on rental.inventory_id = inventory.inventory_id
            join film on inventory.film_id = film.film_id
group by film.film_id
order by num_rentals desc
limit 10;

-- 7. Can 'Academy Dinosaur' be rented from store 1?

select count(*) > 0 as can_be_rented
from film join inventory on film.film_id = inventory.film_id
where title = 'Academy Dinosaur' and store_id = 1;

